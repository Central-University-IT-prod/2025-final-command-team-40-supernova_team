services:
  postgres:
    image: postgres:15
    container_name: my_postgres
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER-postgres}"
      POSTGRES_DB:
      # Password is mandatory
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:?error}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "8001:5432"
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s

  minio:
    image: minio/minio:latest
    restart: always
    command: server --console-address ":9001" /data/
    ports:
      - "8003:9000"
      - "8004:9001"
    environment:
      MINIO_ROOT_USER:
      MINIO_ROOT_PASSWORD:
    volumes:
      - minio-storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  redis:
    image: redis:7
    container_name: my_redis
    restart: always
    ports:
      - "8002:6379"

  app:
    build: .
    container_name: my_app
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DEBUG:
      AUTH_SECRET:

      # Services
      DATABASE_URL: "postgresql://${POSTGRES_USER-postgres}:${POSTGRES_PASSWORD-postgres}@postgres:5432/${POSTGRES_DB}"
      REDIS_URL: "redis://my_redis:6379/0"
      MINIO_ROOT_USER:
      MINIO_ROOT_PASSWORD:

      # Integrations
      AI_API_KEY: ${AI_API_KEY:?error}
      KINOPOISK_API_KEYS: ${KINOPOISK_API_KEYS:?error}

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 5s

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl/:/ssl/
    depends_on:
      - app

volumes:
  postgres_data:
  minio-storage:
